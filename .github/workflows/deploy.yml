name: Deploy with DockerHub to Ubuntu Server

on:
  push:
    branches:
      - main

env:
  # 운영용 Jasypt 키 (배포 단계에서만 사용)
  JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 0️⃣ 소스 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # 1️⃣ JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 2️⃣ Gradle 실행 권한 부여
      - name: Set gradlew permissions
        run: chmod +x ./gradlew
       
      # 3️⃣ 테스트 단계: 테스트용 H2 profile 사용, Jasypt 없이 실행
      # - name: Run Tests (H2 DB)
      #   run: ./gradlew clean test -Dspring.profiles.active=test
      
      # 3️⃣ 빌드 단계: 테스트 스킵 + 실제 Jasypt 키 적용
      - name: Build with Gradle (Oracle DB, skip tests)
        run: ./gradlew clean build -x test -Djasypt.encryptor.password=$JASYPT_ENCRYPTOR_PASSWORD

      # 5️⃣ DockerHub 로그인
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 6️⃣ Docker 이미지 빌드 & 푸시 (버전태깅추가)
      - name: Build and Push Docker image
        run: |
          VERSION=${{ github.sha }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:$VERSION \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:$VERSION
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:latest
          

      # 7️⃣ SSH 키 등록
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 8️⃣ 서버 호스트 등록
      - name: Add known hosts
        run: ssh-keyscan -t ed25519 3.34.4.153 >> ~/.ssh/known_hosts

      # 9️⃣ 서버 배포 (DockerHub 이미지)
      - name: Deploy on server using DockerHub image
        run: |
          ssh ubuntu@3.34.4.153 << 'EOF'
            docker stop music-sns-app || true
            docker rm music-sns-app || true
          
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:latest
            docker run -d --name music-sns-app \
              -p 8080:8080 \
              -e JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_KEY }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/music-sns-app:latest
          EOF
